package integra.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : iGammaJNAiGammaJNA.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IGAMMA_BUILDING extends Structure {
	public int iSize;
	public long iID;
	/// C type : char[32]
	public byte[] marker = new byte[32];
	/// C type : char[32]
	public byte[] buildingNumber = new byte[32];
	/// C type : char[32]
	public byte[] lotNumber = new byte[32];
	/// C type : char[32]
	public byte[] jrgNumber = new byte[32];
	/// C type : char[32]
	public byte[] jrbNumber = new byte[32];
	/// C type : char[32]
	public byte[] precinct = new byte[32];
	/// C type : char[32]
	public byte[] cadastralUnit = new byte[32];
	/// C type : char[32]
	public byte[] finishYear = new byte[32];
	/// C type : char[64]
	public byte[] type = new byte[64];
	/// C type : char[32]
	public byte[] buildUpArea = new byte[32];
	public IGAMMA_BUILDING() {
		super();
		setAlignType(Structure.ALIGN_NONE);
	}
	public IGAMMA_BUILDING(Pointer pointer) {
		super(pointer, Structure.ALIGN_NONE);
		read();
	}
   @Override
	protected List getFieldOrder() {
		return Arrays.asList("iSize", "iID", "marker", "buildingNumber", "lotNumber", "jrgNumber", "jrbNumber", "precinct", "cadastralUnit", "finishYear", "type", "buildUpArea");
	}
	public static class ByReference extends IGAMMA_BUILDING implements Structure.ByReference {
		
	};
	public static class ByValue extends IGAMMA_BUILDING implements Structure.ByValue {
		
	};
}
