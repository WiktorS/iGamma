package integra.jna;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.PointerByReference;

import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>IntegraJNA</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IntegraJNALibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "IntegraJNA";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(IntegraJNALibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(IntegraJNALibrary.JNA_LIBRARY_NAME);
	}
	/**
	 * Original signature : <code>void IntegraJnaFree(void*)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:23</i>
	 */
	public static native void IntegraJnaFree(Pointer p);
	/**
	 * Original signature : <code>int IntegraJnaConnect(const char*, const char*, const char*, const char*, const char*, void**, char**)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:25</i><br>
	 * @deprecated use the safer methods {@link #IntegraJnaConnect(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #IntegraJnaConnect(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	//@Deprecated 
	//public static native int IntegraJnaConnect(Pointer pszDBMSName, Pointer pszDBMSUserName, Pointer pszDBMSPass, Pointer pszDBUserName, Pointer pszDBPass, PointerByReference ppGamma, PointerByReference ppszError);
	/**
	 * Original signature : <code>int IntegraJnaConnect(const char*, const char*, const char*, const char*, const char*, void**, char**)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:25</i>
	 */
	public static native int IntegraJnaConnect(String pszDBMSName, String pszDBMSUserName, String pszDBMSPass, String pszDBUserName, String pszDBPass, PointerByReference ppGamma, PointerByReference ppszError);
	/**
	 * Original signature : <code>int IntegraJnaDisconnect(void*)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:27</i>
	 */
	public static native int IntegraJnaDisconnect(Pointer pGamma);
	/**
	 * Original signature : <code>int IntegraJnaGetSystematicList(void*, ULONGLONG*, int, INTEGRA_SYSTEMATIC**, int*)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:29</i><br>
	 * @deprecated use the safer methods {@link #IntegraJnaGetSystematicList(com.sun.jna.Pointer, java.nio.LongBuffer, int, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #IntegraJnaGetSystematicList(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	//@Deprecated 
	//public static native int IntegraJnaGetSystematicList(Pointer pGamma, LongByReference pIdArray, int iIdArrayLength, PointerByReference ppSystematicList, IntByReference piLength);
	/**
	 * Original signature : <code>int IntegraJnaGetSystematicList(void*, ULONGLONG*, int, INTEGRA_SYSTEMATIC**, int*)</code><br>
	 * <i>native declaration : IntegraJNAIntegraJNAIntegraJNA.h:29</i>
	 */
	public static native int IntegraJnaGetSystematicList(Pointer pGamma, LongBuffer pIdArray, int iIdArrayLength, PointerByReference ppSystematicList, IntBuffer piLength);
}
